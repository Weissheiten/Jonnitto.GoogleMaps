{"version":3,"file":"Main.js","sources":["../Private/Javascripts/GoogleMaps.js"],"sourcesContent":["// Google Maps Function\n// To set the options, use the global variable GoogleMapsOptions\n// To set the marker pin, use the global variable GoogleMapsPin\n// To include functions, use GoogleMapsFunction\nwindow.initJonnittoGoogleMaps = function() {\n    var feedback = [];\n    var initClass = 'jonnitto-googlemaps-init';\n\n    // We store eveything in one Object, so it's easier to include functions\n    var object = {\n        Map: {\n            elements: document.querySelectorAll('.jonnitto-googlemaps-mapview'),\n            options: {\n                zoom: 15,\n                mapTypeControl: true,\n                streetViewControl: false,\n                zoomControl: true,\n                scrollwheel: false\n            }\n        },\n        Streetview: {\n            elements: document.querySelectorAll('.jonnitto-googlemaps-streetview'),\n            options: {\n                scrollwheel: false\n            }\n        }\n    };\n\n    // Check if String is a Float\n    function isFloat(val) {\n        var floatRegex = /^-?\\d+(?:[.,]\\d*?)?$/;\n        if (!floatRegex.test(val)) {\n            return false;\n        }\n        val = parseFloat(val);\n        if (isNaN(val)) {\n            return false;\n        }\n        return true;\n    }\n\n    function extend(object, inject) {\n        for (var key in inject) {\n            if (inject.hasOwnProperty(key)) {\n                object[key] = inject[key];\n            }\n        }\n        return object;\n    }\n\n    function getNumber(element, value) {\n        var number = parseInt(element.getAttribute('data-' + value));\n        if (typeof number === 'number' && number) {\n            return number;\n        }\n        return false;\n    }\n\n    function hasData(element, value) {\n        return element.getAttribute('data-' + value) !== null;\n    }\n\n    function getLocation(element, callback) {\n        var address = element.getAttribute('data-location');\n        var split = address.split(',');\n        var coordinates;\n\n        function successful(location) {\n            element.className += ' ' + initClass;\n            callback({ element: element, location: location });\n        }\n\n        function failed(status) {\n            if (document.body.className.indexOf('neos-backend') > -1) {\n                // We are in the backend of Neos\n                var sentence = 'Geocode was not successful';\n                if (status) {\n                    alert(sentence + ' for the following reason: ' + status);\n                } else {\n                    alert(sentence);\n                }\n            }\n        }\n\n        if (split.length == 2 && isFloat(split[0].trim()) && isFloat(split[1].trim())) {\n            // Input are coordinates\n            coordinates = new google.maps.LatLng(split[0].trim(), split[1].trim());\n            successful(coordinates);\n        } else {\n            coordinates = new google.maps.Geocoder();\n            coordinates.geocode(\n                {\n                    address: address\n                },\n                function(results, status) {\n                    if (status == google.maps.GeocoderStatus.OK) {\n                        successful(results[0].geometry.location);\n                    } else {\n                        failed(status);\n                    }\n                    return false;\n                }\n            );\n        }\n    }\n\n    function renderMap(options) {\n        var mapOptions = object.Map.options;\n        var zoom = getNumber(options.element, 'zoom');\n        var content = options.element.content || null;\n        if (content === null) {\n            content = options.element.innerHTML.replace(/^\\s+|\\s+$/g, '') || false;\n            options.element.content = content;\n        }\n        var storage = {\n            content: content,\n            LatLng: options.location,\n            lat: options.location.lat(),\n            lng: options.location.lng()\n        };\n\n        if (zoom) {\n            mapOptions.zoom = zoom;\n        }\n        mapOptions.center = storage.LatLng;\n        storage.map = new google.maps.Map(options.element, mapOptions);\n\n        if (storage.content) {\n            storage.infowindow = new google.maps.InfoWindow({\n                content: storage.content\n            });\n        }\n\n        // define marker\n        var marker = {\n            position: storage.LatLng,\n            title: options.element.getAttribute('data-marker-title'),\n            map: storage.map,\n            draggable: false\n        };\n\n        if (typeof GoogleMapsPin === 'string') {\n            marker.icon = GoogleMapsPin;\n        } else if (typeof GoogleMapsPin === 'object') {\n            extend(marker, GoogleMapsPin);\n        }\n\n        storage.marker = new google.maps.Marker(marker);\n\n        if (hasData(options.element, 'showinfo') && storage.content) {\n            storage.infowindow.open(storage.map, storage.marker);\n        }\n\n        // jshint loopfunc:true\n        if (typeof window.addEventListener === 'function') {\n            (function(_storage) {\n                google.maps.event.addListener(_storage.map, 'bounds_changed', function() {\n                    _storage.center = _storage.map.getCenter();\n                });\n                google.maps.event.addDomListener(window, 'resize', function() {\n                    _storage.map.setCenter(_storage.center);\n                });\n                google.maps.event.addListener(_storage.marker, 'click', function() {\n                    if (_storage.content) {\n                        _storage.infowindow.open(_storage.map, _storage.marker);\n                    } else {\n                        window.open('https://www.google.com/maps/dir//' + _storage.lat + ',' + _storage.lng);\n                    }\n                });\n            })(storage);\n        }\n        // jshint loopfunc:false\n    }\n\n    function renderStreetview(options) {\n        var streetStorage = object.Streetview.options;\n        streetStorage.position = options.location;\n        streetStorage.pov = {\n            heading: getNumber(options.element, 'heading') || 0,\n            pitch: getNumber(options.element, 'pitch') || 0\n        };\n        new google.maps.StreetViewPanorama(options.element, streetStorage);\n    }\n\n    for (var key in object) {\n        var num = object[key].elements.length;\n        object[key].index = num;\n        feedback[feedback.length] = num + ' ' + key + (num == 1 ? '' : 's') + ' found';\n    }\n\n    if (typeof GoogleMapsFunction === 'function') {\n        GoogleMapsFunction();\n    }\n\n    if (typeof GoogleMapsOptions === 'object') {\n        extend(object.Map.options, GoogleMapsOptions);\n    }\n\n    if (typeof GoogleStreetviewOptions === 'object') {\n        extend(object.Streetview.options, GoogleStreetviewOptions);\n    }\n\n    for (var m = 0; m < object.Map.index; m++) {\n        var map = object.Map.elements[m];\n\n        if (map.className.indexOf(initClass) === -1) {\n            getLocation(map, renderMap);\n        }\n    }\n\n    for (var s = 0; s < object.Streetview.index; s++) {\n        var streetview = object.Streetview.elements[s];\n\n        if (streetview.className.indexOf(initClass) === -1) {\n            getLocation(streetview, renderStreetview);\n        }\n    }\n\n    return feedback;\n};\n"],"names":["window","initJonnittoGoogleMaps","feedback","initClass","object","Map","elements","document","querySelectorAll","options","zoom","mapTypeControl","streetViewControl","zoomControl","scrollwheel","Streetview","isFloat","val","test","parseFloat","isNaN","extend","inject","key","hasOwnProperty","getNumber","element","value","number","parseInt","getAttribute","getLocation","callback","address","split","successful","location","className","length","trim","google","maps","LatLng","Geocoder","geocode","results","status","GeocoderStatus","OK","geometry","body","indexOf","sentence","alert","failed","renderMap","mapOptions","content","innerHTML","replace","storage","lat","lng","center","map","infowindow","InfoWindow","_storage","marker","position","title","draggable","GoogleMapsPin","icon","Marker","open","addEventListener","event","addListener","getCenter","addDomListener","setCenter","renderStreetview","streetStorage","pov","heading","pitch","StreetViewPanorama","num","index","GoogleMapsFunction","GoogleMapsOptions","GoogleStreetviewOptions","m","s","streetview"],"mappings":"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"}